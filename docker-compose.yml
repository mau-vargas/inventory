version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    command: sh -c "chmod 600 /var/lib/rabbitmq/.erlang.cookie && rabbitmq-server"
    networks:
      - app-network

  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      #- ./inventory/app/postgresql.conf:/etc/postgresql/postgresql.conf

    environment:
      - POSTGRES_PASSWORD=admin_password
      - POSTGRES_USER=admin_user
      - POSTGRES_DB=inventory_db
      - POSTGRES_HOST=postgres
    #command: postgres -c config_file=/etc/postgresql/postgresql.conf
    networks:
      - app-network

  fastapi:
    build: ./app
    container_name: 'fastapi'
    depends_on:
      - postgres
      - rabbitmq
    environment:
      - DATABASE_URL=postgresql://admin_user:admin_password@postgres:5432/inventory_db
      #- RABBITMQ_URL=amqp://guest:guest@rabbitmq
    command:
      [
        "uvicorn",
        "main:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8000"
      ]

    ports:
      - 8000:8000
    volumes:
      - .:/Users/mauriciovargas/Desktop/Projects/Python/Proyecto_2/inventory:/app/main.py
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres:
    driver: bridge
